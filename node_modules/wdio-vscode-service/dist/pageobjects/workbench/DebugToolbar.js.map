{"version":3,"file":"DebugToolbar.js","sourceRoot":"","sources":["../../../src/pageobjects/workbench/DebugToolbar.ts"],"names":[],"mappings":";;;;;;;;;AACA,oCAAkE;AAClE,mDAA4E;AAG5E;;;;GAIG;AAEH,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,gBAAqC;IAAvE;;QACI;;WAEG;QACI,eAAU,GAAG,cAAuB,CAAA;IAgE/C,CAAC;IA9DG;;OAEG;IACH,KAAK,CAAC,iBAAiB;QACnB,MAAM,OAAO,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE;YAC/B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;YAC1C,OAAO,GAAG,CAAC,SAAS,EAAE,CAAA;QAC1B,CAAC,CAAC,CAAA;IACN,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,QAAQ;QACV,MAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAA;IAC5C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,KAAK;QACP,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAA;IACzC,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,QAAQ;QACV,MAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAA;IAC5C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,QAAQ;QACV,MAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAA;IAC5C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO;QACT,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAA;IAC3C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO;QACT,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAA;IAC3C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,IAAI;QACN,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAA;IACxC,CAAC;IAEO,SAAS,CAAE,IAAY;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAC7B,CAAC;CACJ,CAAA;AApEY,YAAY;IADxB,IAAA,qBAAa,EAAC,sBAAoB,CAAC;GACvB,YAAY,CAoExB;AApEY,oCAAY","sourcesContent":["import { ChainablePromiseElement } from 'webdriverio'\nimport { BasePage, PageDecorator, IPageDecorator } from '../utils'\nimport { DebugToolbar as DebugToolbarLocators } from '../../locators/1.61.0'\n\nexport interface DebugToolbar extends IPageDecorator<typeof DebugToolbarLocators> {}\n/**\n * Page object for the Debugger Toolbar\n *\n * @category Workbench\n */\n@PageDecorator(DebugToolbarLocators)\nexport class DebugToolbar extends BasePage<typeof DebugToolbarLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'DebugToolbar' as const\n\n    /**\n     * Wait for the execution to pause at the next breakpoint\n     */\n    async waitForBreakPoint (): Promise<void> {\n        await browser.waitUntil(async () => {\n            const btn = await this.button$('continue')\n            return btn.isEnabled()\n        })\n    }\n\n    /**\n     * Click Continue\n     */\n    async continue (): Promise<void> {\n        await this.getButton('continue').click()\n    }\n\n    /**\n     * Click Pause\n     */\n    async pause (): Promise<void> {\n        await this.getButton('pause').click()\n    }\n\n    /**\n     * Click Step Over\n     */\n    async stepOver (): Promise<void> {\n        await this.getButton('step-oer').click()\n    }\n\n    /**\n     * Click Step Into\n     */\n    async stepInto (): Promise<void> {\n        await this.getButton('step-ito').click()\n    }\n\n    /**\n     * Click Step Out\n     */\n    async stepOut (): Promise<void> {\n        await this.getButton('step-ot').click()\n    }\n\n    /**\n     * Click Restart\n     */\n    async restart (): Promise<void> {\n        await this.getButton('restart').click()\n    }\n\n    /**\n     * Click Stop\n     */\n    async stop (): Promise<void> {\n        await this.getButton('stop').click()\n    }\n\n    private getButton (name: string): ChainablePromiseElement<WebdriverIO.Element> {\n        return this.button$(name)\n    }\n}\n"]}