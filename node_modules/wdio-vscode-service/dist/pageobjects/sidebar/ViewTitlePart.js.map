{"version":3,"file":"ViewTitlePart.js","sourceRoot":"","sources":["../../../src/pageobjects/sidebar/ViewTitlePart.ts"],"names":[],"mappings":";;;;;;;;;AAAA,oCAEiB;AACjB,0BAAgC;AAChC,mDAA8E;AAG9E;;;;GAIG;AAEH,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,8BAAoD;IAMnF,YACI,QAA0B,EACnB,OAAyB,IAAI,eAAW,CAAC,QAAQ,CAAC;QAEzD,KAAK,CAAC,QAAQ,CAAC,CAAA;QAFR,SAAI,GAAJ,IAAI,CAA8C;QAP7D;;WAEG;QACI,eAAU,GAAG,eAAwB,CAAA;IAO5C,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,QAAQ;QACV,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;IAChC,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,UAAU;QACZ,MAAM,OAAO,GAAwB,EAAE,CAAA;QACvC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAA;QACpC,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;YAC5B,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;YACnE,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;SACjF;QACD,OAAO,OAAO,CAAA;IAClB,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,SAAS,CAAE,KAAa;QAC1B,OAAO,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,CAAA;IACrE,CAAC;CACJ,CAAA;AA3CY,aAAa;IADzB,IAAA,qBAAa,EAAC,uBAAqB,CAAC;GACxB,aAAa,CA2CzB;AA3CY,sCAAa;AA8C1B;;;;GAIG;AAEH,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,gBAAsC;IAMzE,YAAa,QAA0B,EAAU,KAAa,EAAE,SAAwB;QACpF,KAAK,CAAC,QAAQ,EAAG,QAAQ,CAAC,aAAa,CAAC,kBAA+B,CAAC,KAAK,CAAW,EAAE,SAAS,CAAC,IAAI,CAAC,CAAA;QAD5D,UAAK,GAAL,KAAK,CAAQ;QAL9D;;WAEG;QACI,eAAU,GAAG,eAAwB,CAAA;QAIxC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACtB,CAAC;IAED;;OAEG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAA;IACrB,CAAC;CACJ,CAAA;AAjBY,iBAAiB;IAD7B,IAAA,qBAAa,EAAC,uBAAqB,CAAC;GACxB,iBAAiB,CAiB7B;AAjBY,8CAAiB","sourcesContent":["import {\n    ElementWithContextMenu, PageDecorator, IPageDecorator, BasePage, VSCodeLocatorMap\n} from '../utils'\nimport { SideBarView } from '..'\nimport { ViewTitlePart as ViewTitlePartLocators } from '../../locators/1.61.0'\n\nexport interface ViewTitlePart extends IPageDecorator<typeof ViewTitlePartLocators> { }\n/**\n * Page object representing the top (title) part of a side bar view\n *\n * @category Sidebar\n */\n@PageDecorator(ViewTitlePartLocators)\nexport class ViewTitlePart extends ElementWithContextMenu<typeof ViewTitlePartLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'ViewTitlePart' as const\n\n    constructor (\n        locators: VSCodeLocatorMap,\n        public view: SideBarView<any> = new SideBarView(locators)\n    ) {\n        super(locators)\n    }\n\n    /**\n     * Returns the displayed title of the view\n     * @returns Promise resolving to displayed title\n     */\n    async getTitle (): Promise<string> {\n        return this.title$.getText()\n    }\n\n    /**\n     * Finds action buttons inside the view title part\n     * @returns Promise resolving to array of TitleActionButton objects\n     */\n    async getActions (): Promise<TitleActionButton[]> {\n        const actions: TitleActionButton[] = []\n        const elements = await this.action$$\n        for (const element of elements) {\n            const title = await element.getAttribute(this.locators.actionLabel)\n            actions.push(await new TitleActionButton(this.locatorMap, title, this).wait())\n        }\n        return actions\n    }\n\n    /**\n     * Finds an action button by title\n     * @param title title of the button to search for\n     * @returns Promise resolving to TitleActionButton object\n     */\n    async getAction (title: string): Promise<TitleActionButton> {\n        return new TitleActionButton(this.locatorMap, title, this).wait()\n    }\n}\n\nexport interface ViewTitlePart extends IPageDecorator<typeof ViewTitlePartLocators> { }\n/**\n * Page object representing a button inside the view title part\n *\n * @category Sidebar\n */\n@PageDecorator(ViewTitlePartLocators)\nexport class TitleActionButton extends BasePage<typeof ViewTitlePartLocators> {\n    /**\n     * @private\n     */\n    public locatorKey = 'ViewTitlePart' as const\n\n    constructor (locators: VSCodeLocatorMap, private title: string, viewTitle: ViewTitlePart) {\n        super(locators, (locators.ViewTitlePart.actionContstructor as Function)(title) as string, viewTitle.elem)\n        this.title = title\n    }\n\n    /**\n     * Get title of the button\n     */\n    getTitle (): string {\n        return this.title\n    }\n}\n"]}